[{"P:\\wamp\\www\\strapi-chat-ui\\src\\index.js":"1","P:\\wamp\\www\\strapi-chat-ui\\src\\reportWebVitals.js":"2","P:\\wamp\\www\\strapi-chat-ui\\src\\config\\network.js":"3","P:\\wamp\\www\\strapi-chat-ui\\src\\App.js":"4","P:\\wamp\\www\\strapi-chat-ui\\src\\screens\\ChatRoom\\index.js":"5","P:\\wamp\\www\\strapi-chat-ui\\src\\screens\\JoinRoom\\index.js":"6","P:\\wamp\\www\\strapi-chat-ui\\src\\config\\web-sockets.js":"7","P:\\wamp\\www\\strapi-chat-ui\\src\\screens\\ChatRoom\\styles.js":"8","P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Messages\\index.js":"9","P:\\wamp\\www\\strapi-chat-ui\\src\\components\\List\\index.js":"10","P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Header\\index.js":"11","P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Messages\\Message\\index.js":"12","P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Messages\\Message\\styles.js":"13"},{"size":805,"mtime":1694051502480,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1694051502480,"results":"16","hashOfConfig":"15"},{"size":94,"mtime":1694051502479,"results":"17","hashOfConfig":"15"},{"size":1447,"mtime":1694052037127,"results":"18","hashOfConfig":"15"},{"size":2269,"mtime":1694056517200,"results":"19","hashOfConfig":"15"},{"size":2426,"mtime":1694052083446,"results":"20","hashOfConfig":"15"},{"size":135,"mtime":1694107487706,"results":"21","hashOfConfig":"15"},{"size":981,"mtime":1694051502480,"results":"22","hashOfConfig":"15"},{"size":848,"mtime":1694053860876,"results":"23","hashOfConfig":"15"},{"size":1231,"mtime":1694051502478,"results":"24","hashOfConfig":"15"},{"size":1312,"mtime":1694051502478,"results":"25","hashOfConfig":"15"},{"size":967,"mtime":1694051502479,"results":"26","hashOfConfig":"15"},{"size":954,"mtime":1694051502479,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"m0t7xo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"P:\\wamp\\www\\strapi-chat-ui\\src\\index.js",[],["58","59"],"P:\\wamp\\www\\strapi-chat-ui\\src\\reportWebVitals.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\config\\network.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\App.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\screens\\ChatRoom\\index.js",["60","61","62","63","64"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { socket } from '../../config/web-sockets';\r\nimport Header from '../../components/Header';\r\nimport Messages from '../../components/Messages';\r\nimport { history } from '../../config/network';\r\nimport {\r\n    ChatContainer,\r\n    StyledContainer,\r\n    ChatBox,\r\n    StyledButton,\r\n    SendIcon\r\n} from './styles';\r\nimport { Button, Input } from 'antd';\r\n\r\nfunction ChatRoom(props) {\r\n    const { username, room, joinData } = props;\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(joinData).length > 0) {\r\n            setMessages([joinData])\r\n            socket.on('message', (message, error) => {\r\n                setMessages(msgs => [...msgs, message]);\r\n            });\r\n        }\r\n        else {\r\n            history.push('/join')\r\n        }\r\n    }, [joinData]);\r\n\r\n    const handleChange = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        sendMessage(message);\r\n    }\r\n\r\n    const sendMessage = (message) => {\r\n        \r\n        if (message) {\r\n            socket.emit('sendMessage', { user: username, message, room }, (error) => {\r\n                if (error) {\r\n                    alert(error)\r\n                    history.push('/join');\r\n                }\r\n            });\r\n            setMessage('')\r\n        } else {\r\n            alert(\"Message can't be empty\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ChatContainer>\r\n            <Header room={room} />\r\n            <StyledContainer>\r\n                <ChatBox>\r\n                    <Messages\r\n                        messages={messages}\r\n                        username={username}\r\n                    />\r\n                    <Input type='text' placeholder='type your message' value={message} onChange={handleChange} />\r\n                    \r\n                    <SendIcon onClick={handleClick}>\r\n                        <i className='fa fa-paper-plane' />\r\n                    </SendIcon>\r\n                </ChatBox>\r\n            </StyledContainer>\r\n        </ChatContainer>\r\n    )\r\n};\r\nexport default ChatRoom;","P:\\wamp\\www\\strapi-chat-ui\\src\\screens\\JoinRoom\\index.js",["65","66"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Input, Card, Button} from 'antd';\r\nimport { socket } from '../../config/web-sockets';\r\nfunction JoinRoom(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [error, setError] = useState('');\r\n    const onUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        setUsername(inputValue);\r\n\r\n    }\r\n    const onRoomChange = (e) => {\r\n        const roomNo = e.target.value;\r\n        setRoom(roomNo);\r\n    }\r\n    const onClick = () => {\r\n        if(username && room) {\r\n            socket.emit('join', { username, room }, (error) => {\r\n                if(error) {\r\n                    setError(error)\r\n                    alert(error);\r\n                } else {\r\n                    socket.on('welcome', (data) => {\r\n                        props.onJoinSuccess(data);\r\n                    });\r\n                }\r\n            }); \r\n        }\r\n    }\r\n    socket.on('welcome', (data) => {\r\n        console.log(\"Welcome event inside JoinRoom\", data);\r\n        props.onJoinSuccess(data);\r\n    });\r\n    return (\r\n        <StyledCard>\r\n            <label htmlFor=\"username\">\r\n                Enter your name\r\n                <Input\r\n                    name=\"username\"\r\n                    placeholder=\"Enter your username\"\r\n                    maxLength={25}\r\n                    value={username}\r\n                    onChange={onUsernameChange}\r\n                />\r\n            </label>\r\n            <label htmlFor=\"room\">\r\n                Enter room number of your choice\r\n                <Input\r\n                    name=\"room\"\r\n                    placeholder=\"Enter your room number\"\r\n                    maxLength={25}\r\n                    value={room}\r\n                    onChange={onRoomChange}\r\n                />\r\n            </label>\r\n            <StyledButton \r\n                type=\"primary\" \r\n                size={\"large\"}\r\n                onClick={onClick}\r\n            >\r\n                Join the Chat Room\r\n            </StyledButton>\r\n        </StyledCard>\r\n    )\r\n};\r\n\r\nexport default JoinRoom;\r\n\r\nconst StyledCard = styled(Card)`\r\n    width: 581px;\r\n    height: 210px;\r\n    margin: 30vh auto;\r\n    box-shadow: 2px 3px 3px 2.8px #d7d7e4;\r\n    text-align: center;\r\n`\r\nconst StyledButton = styled(Button)`\r\n    margin-top: 10px;\r\n`","P:\\wamp\\www\\strapi-chat-ui\\src\\config\\web-sockets.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\screens\\ChatRoom\\styles.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Messages\\index.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\components\\List\\index.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Header\\index.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Messages\\Message\\index.js",[],"P:\\wamp\\www\\strapi-chat-ui\\src\\components\\Messages\\Message\\styles.js",[],["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":11,"column":5,"nodeType":"75","messageId":"76","endLine":11,"endColumn":17},{"ruleId":"73","severity":1,"message":"78","line":14,"column":10,"nodeType":"75","messageId":"76","endLine":14,"endColumn":16},{"ruleId":"73","severity":1,"message":"79","line":20,"column":12,"nodeType":"75","messageId":"76","endLine":20,"endColumn":17},{"ruleId":"73","severity":1,"message":"80","line":20,"column":19,"nodeType":"75","messageId":"76","endLine":20,"endColumn":27},{"ruleId":"73","severity":1,"message":"81","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"82","line":8,"column":12,"nodeType":"75","messageId":"76","endLine":8,"endColumn":17},{"ruleId":"69","replacedBy":"83"},{"ruleId":"71","replacedBy":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'StyledButton' is defined but never used.","'Button' is defined but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.",["85"],["86"],"no-global-assign","no-unsafe-negation"]